highland2 %>%
ggplot(aes(x = date, y = L, color = treeID)) +
geom_line()+ geom_point()+theme_minimal()
highland2 <- LAI %>%
filter(site == "Highland") %>%
mutate(treeType = case_when(grepl("ash", treeID) ~ "Ash",
grepl("maple", treeID, ignore.case = TRUE) ~"Maple")) %>%
filter(treeType == "Maple")
highland2 <- highland2[nrow(highland2) + 1,] <- c(243, 'H_maple1', "Highland", 2023-02-20, , , Maple)
highland2 <- LAI %>%
filter(site == "Highland") %>%
mutate(treeType = case_when(grepl("ash", treeID) ~ "Ash",
grepl("maple", treeID, ignore.case = TRUE) ~"Maple")) %>%
filter(treeType == "Maple")
highland2 <- highland2[nrow(highland2) + 1,] <- c(243, 'H_maple1', "Highland", 2023-02-20, NA, NA, Maple)
highland2 <- LAI %>%
filter(site == "Highland") %>%
mutate(treeType = case_when(grepl("ash", treeID) ~ "Ash",
grepl("maple", treeID, ignore.case = TRUE) ~"Maple")) %>%
filter(treeType == "Maple")
highland2 <- highland2[nrow(highland2) + 1,] <- c(243, 'H_maple1', "Highland", 2023-02-20, NA, NA, 'Maple')
highland2 <- LAI %>%
filter(site == "Highland") %>%
mutate(treeType = case_when(grepl("ash", treeID) ~ "Ash",
grepl("maple", treeID, ignore.case = TRUE) ~"Maple")) %>%
filter(treeType == "Maple")
highland2[nrow(highland2) + 1,] <- c(243, 'H_maple1', "Highland", 2023-02-20, NA, NA, 'Maple')
highland2 <- LAI %>%
filter(site == "Highland") %>%
mutate(treeType = case_when(grepl("ash", treeID) ~ "Ash",
grepl("maple", treeID, ignore.case = TRUE) ~"Maple")) %>%
filter(treeType == "Maple")
highland2 %>%
ggplot(aes(x = date, y = L, color = treeID)) +
geom_line()+ geom_point()+theme_minimal()
highland2 <- LAI %>%
filter(site == "Highland") %>%
mutate(treeType = case_when(grepl("ash", treeID) ~ "Ash",
grepl("maple", treeID, ignore.case = TRUE) ~"Maple")) %>%
filter(treeType == "Maple")
highland2 %>%
ggplot(aes(x = date, y = L, color = treeID)) +
geom_line()+ geom_point()+theme_minimal()
highland2 <- LAI %>%
filter(site == "Highland") %>%
mutate(treeType = case_when(grepl("ash", treeID) ~ "Ash",
grepl("maple", treeID, ignore.case = TRUE) ~"Maple")) %>%
filter(treeType == "Maple")
highland2 <- highland2 %>%
mutate(time = case_when(grepl("2023", date) ~ "Winter",
grepl("2022", date, ignore.case = TRUE) ~ "Summer"))
highland2 %>%
ggplot(aes(x = date, y = L, color = treeID)) +
facet_grid(.~time)+
geom_line()+ geom_point()+theme_minimal()
highland2 <- LAI %>%
filter(site == "Highland") %>%
mutate(treeType = case_when(grepl("ash", treeID) ~ "Ash",
grepl("maple", treeID, ignore.case = TRUE) ~"Maple")) %>%
filter(treeType == "Maple")
highland3 <- highland2 %>%
mutate(time = case_when(grepl("2023", date) ~ "Winter",
grepl("2022", date, ignore.case = TRUE) ~ "Summer"))
highland2 %>%
ggplot(aes(x = date, y = L, color = treeID))
geom_line()+ geom_point()+theme_minimal()
highland2 <- LAI %>%
filter(site == "Highland") %>%
mutate(treeType = case_when(grepl("ash", treeID) ~ "Ash",
grepl("maple", treeID, ignore.case = TRUE) ~"Maple")) %>%
filter(treeType == "Maple")
highland3 <- highland2 %>%
mutate(time = case_when(grepl("2023", date) ~ "Winter",
grepl("2022", date, ignore.case = TRUE) ~ "Summer"))
highland2 %>%
ggplot(aes(x = date, y = L, color = treeID))+
geom_line()+ geom_point()+theme_minimal()
highland2 %>%
ggplot(aes(x = date, y = L, color = treeID))+
geom_line()+ geom_point()+theme_minimal()+
coord_cartesian(xlim=c(2022-10-06, 2022-11-07), c(2023-05-09, 2023-06-13))
highland2 <- LAI %>%
filter(site == "Highland") %>%
mutate(treeType = case_when(grepl("ash", treeID) ~ "Ash",
grepl("maple", treeID, ignore.case = TRUE) ~"Maple")) %>%
filter(treeType == "Maple")
highland3 <- highland2 %>%
mutate(time = case_when(grepl("2023", date) ~ "Winter",
grepl("2022", date, ignore.case = TRUE) ~ "Summer"))
highland2 %>%
ggplot(aes(x = date, y = L, color = treeID))+
geom_line()+ geom_point()+theme_minimal()+
coord_cartesian(xlim=c(2022-10-06, 2022-11-07), c(2023-05-09, 2023-06-13))
highland2 <- LAI %>%
filter(site == "Highland") %>%
mutate(treeType = case_when(grepl("ash", treeID) ~ "Ash",
grepl("maple", treeID, ignore.case = TRUE) ~"Maple")) %>%
filter(treeType == "Maple")
highland3 <- highland2 %>%
mutate(time = case_when(grepl("2023", date) ~ "Winter",
grepl("2022", date, ignore.case = TRUE) ~ "Summer"))
highland2 %>%
ggplot(aes(x = date, y = L, color = treeID))+
geom_line()+ geom_point()+theme_minimal()+
coord_cartesian(xlim=c("October", "November"), c("May", "June"))
highland2 <- LAI %>%
filter(site == "Highland") %>%
mutate(treeType = case_when(grepl("ash", treeID) ~ "Ash",
grepl("maple", treeID, ignore.case = TRUE) ~"Maple")) %>%
filter(treeType == "Maple")
highland3 <- highland2 %>%
mutate(time = case_when(grepl("2023", date) ~ "Winter",
grepl("2022", date, ignore.case = TRUE) ~ "Summer"))
highland2 %>%
ggplot(aes(x = date, y = L, color = treeID))+
geom_line()+ geom_point()+theme_minimal()
library(readr)
library(dplyr)
library(ggplot2)
```{r, message = FALSE}
library(dplyr)
library(readr)
library(dplyr)
library(ggplot2)
library(readr)
SLAWR_REU <- read_csv("C:/Users/layna/OneDrive - macalester.edu/Summer 2023/Trees/SLAWR REU.csv")
View(SLAWR_REU)
ecophys <- read_csv('SLAWR REU')
library(readr)
library(dplyr)
library(ggplot2)
ecophys <- read_csv('SLAWR REU')
library(readr)
library(dplyr)
library(ggplot2)
ecophys <- read_csv('SLAWR REU.csv')
ecophys <- read_csv('SLAWR REU.csv')
ecophys %>%
ggplot(aes(x = waterPotential, y = site)) +
geom_point(color = species)+
facet_grid(.~site)
ecophys %>%
ggplot(aes(x = 'waterPotential', y = 'site')) +
geom_point(color = 'species')+
facet_grid(.~site)
ecophys %>%
ggplot(aes(x = 'waterPotential', y = 'site', color = 'species')) +
geom_point()+
facet_grid(.~site)
ecophys %>%
ggplot(aes(x = 'site', y = 'waterPotential', color = 'species')) +
geom_point()+
facet_grid(.~site)
ecophys %>%
ggplot(aes(x = 'species', y = 'waterPotential', color = 'species')) +
geom_point()+
facet_grid(.~site)
ecophys %>%
ggplot(aes(x = 'species', y = 'waterPotential', color = 'species')) +
geom_point()+
facet_grid(site.~)
ecophys %>%
ggplot(aes(x = 'species', y = 'waterPotential', color = 'species')) +
geom_point()+
facet_grid(site~.)
ecophys %>%
ggplot(aes(x = 'species', y = 'waterPotential', color = 'species')) +
geom_density()+
facet_grid(site~.)
ecophys %>%
ggplot(aes(x = 'waterPotential', color = 'species')) +
geom_density()+
facet_grid(site~.)
ecophys %>%
ggplot(aes(x = 'species', y = 'waterPotential', color = 'species')) +
geom_boxplot()+
facet_grid(site~.)
ecophys %>%
ggplot(aes(x  = 'waterPotential', color = 'species')) +
geom_boxplot()+
facet_grid(site~.)
ecophys %>%
ggplot(aes(x = site, y  = 'waterPotential', color = 'species')) +
geom_boxplot()
ecophys <- read_csv('SLAWR REU.csv')
ecophys <- ecophys %>% as.numeric(waterPotential)
ecophys <- read_csv('SLAWR REU.csv')
ecophys <- ecophys %>% as.numeric('waterPotential')
ecophys %>%
ggplot(aes(x = site, y  = 'waterPotential')) +
geom_boxplot()
ecophys %>%
ggplot(aes(x = site, y  = waterPotential)) +
geom_boxplot()
ecophys %>%
ggplot(aes(x = site, y  = waterPotential), color = species) +
geom_boxplot()
ecophys %>%
ggplot(aes(x = site, y  = waterPotential)) +
geom_boxplot(color = species)
ecophys %>%
ggplot(aes(x = site, y  = waterPotential)) +
geom_boxplot(color = 'species')
ecophys %>%
ggplot(aes(x = site, y  = waterPotential, color = species)) +
geom_boxplot()
ecophys %>%
ggplot(aes(x = site, y  = waterPotential, color = species)) +
geom_boxplot()+
theme_minimum()
ecophys %>%
ggplot(aes(x = site, y  = waterPotential, color = species)) +
geom_boxplot()+
theme_minimal()
library(readr)
library(dplyr)
library(ggplot2)
ecophys <- read_csv('SLAWR REU.csv')
ecophys %>%
ggplot(aes(x = site, y  = waterPotential, color = species)) +
geom_boxplot()+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y  = waterPotential, color = species)) +
geom_boxplot(size = 1)+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y  = waterPotential, color = species)) +
geom_boxplot(size = .7)+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y  = waterPotential, color = species)) +
geom_boxplot(size = .8)+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_violin() +
theme_minimal
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_violin() +
theme_minimal()
install.packages('ggforce')
library(readr)
library(dplyr)
library(ggplot2)
library(ggforce)
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_sina() +
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_sina() +
coord_flip()+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_sina(size = 1) +
coord_flip()+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_sina(size = 3) +
coord_flip()+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_sina(size = 2) +
coord_flip()+
theme_minimal()
install.packages('ggbeeswarm')
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_sina(size = 2) +
coord_flip()+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_beeswarm(size = 2) +
coord_flip()+
theme_minimal()
library(readr)
library(dplyr)
library(ggplot2)
library(ggforce)
library(ggbeeswarm)
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_sina(size = 2) +
coord_flip()+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_beeswarm(size = 2) +
coord_flip()+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_sina(size = 2) +
#coord_flip()+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_beeswarm(size = 2) +
coord_flip()+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_sina(size = 2) +
facet_grid(.~site)+
#coord_flip()+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_beeswarm(size = 2) +
coord_flip()+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_sina(size = 2) +
facet_col(.~site)+
#coord_flip()+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_beeswarm(size = 2) +
coord_flip()+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_sina(size = 2) +
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_beeswarm(size = 2) +
coord_flip()+
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_sina(size = 2) +
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_beeswarm(size = 2) +
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_sina(size = 2) +
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_beeswarm(size = 2) +
theme_minimal()
library(readxl)
library(dplyr)
library(tidyr)
library(gtools)
library(ggplot2)
library(ggpubr)
library(car)
library(rstatix)
setwd("/Users/aidan/Downloads")
library(readr)
library(dplyr)
library(ggplot2)
library(ggforce)
library(ggbeeswarm)
library(readr)
library(dplyr)
library(ggplot2)
library(ggforce)
library(ggbeeswarm)
ecophys <- read_csv('SLAWR REU.csv')
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_sina(size = 2) +
theme_minimal()
ecophys %>%
ggplot(aes(x = site, y = waterPotential, color = species))+
geom_beeswarm(size = 2) +
theme_minimal()
ecophys %>%
ggplot(aes(x = species, y = waterPotential, color = site))+
geom_boxplot(size = 2) +
theme_minimal()
ecophys %>%
ggplot(aes(x = species, y = waterPotential, color = site))+
geom_boxplot(size = 1) +
theme_minimal()
ecophys %>%
ggplot(aes(x = species, y = waterPotential, color = site))+
geom_boxplot(size = 1) +
geom_poimt()+
theme_minimal()
ecophys %>%
ggplot(aes(x = species, y = waterPotential, color = site))+
geom_boxplot(size = 1) +
geom_point()+
theme_minimal()
ecophys %>%
ggplot(aes(x = species, y = waterPotential, color = site))+
geom_boxplot(size = 1) +
geom_point()+
labs(x = "Species", y = "Water Potential", title = "make a title idk")
ecophys %>%
ggplot(aes(x = species, y = waterPotential, color = site))+
geom_boxplot(size = 1) +
geom_point()+
labs(x = "Species", y = "Water Potential", title = "make a title idk")+
theme_minimal()
ecophys %>%
ggplot(aes(x = species, y = waterPotential, color = site))+
geom_boxplot(size = 1) +
geom_jitter()+
labs(x = "Species", y = "Water Potential", title = "make a title idk")+
theme_minimal()
ecophys %>%
ggplot(aes(x = species, y = waterPotential, color = site))+
geom_dotplot(size = 1) +
#geom_jitter()+
labs(x = "Species", y = "Water Potential", title = "make a title idk")+
theme_minimal()
ecophys %>%
ggplot(aes(x = species, y = waterPotential, color = site))+
geom_dotplot() +
#geom_jitter()+
labs(x = "Species", y = "Water Potential", title = "make a title idk")+
theme_minimal()
ecophys %>%
ggplot(aes(x = species, y = waterPotential, color = site))+
geom_dotplot(binaxis='y', stackdir='center', dotsize=1) +
#geom_jitter()+
labs(x = "Species", y = "Water Potential", title = "make a title idk")+
theme_minimal()
ecophys %>%
ggplot(aes(x = species, y = waterPotential, color = site))+
geom_dotplot(binaxis='y', stackdir='center') +
#geom_jitter()+
labs(x = "Species", y = "Water Potential", title = "make a title idk")+
theme_minimal()
ecophys %>%
ggplot(aes(x = species, y = waterPotential, color = site))+
geom_dotplot(binaxis='y', stackdir='center') +
geom_jitter()+
#geom_jitter()+
labs(x = "Species", y = "Water Potential", title = "make a title idk")+
theme_minimal()
ecophys %>%
ggplot(aes(x = species, y = waterPotential, color = site))+
geom_boxplot()+
geom_dotplot(binaxis='y', stackdir='center') +
#geom_jitter()+
labs(x = "Species", y = "Water Potential", title = "make a title idk")+
theme_minimal()
library(readxl)
library(dplyr)
library(tidyr)
library(gtools)
library(ggplot2)
library(ggpubr)
library(car)
library(rstatix)
ecophys <- read_csv('SLAWR REU.csv')
ecophys <- read_csv('SLAWR REU.csv')
bxp <- ggboxplot(
data, x = "species", y = "waterPotential",
color = "site", palette = "jco"
)+ geom_point(aes(fill = site), size = 2, shape = 21, alpha=0.5, position = position_jitterdodge(jitter.width=0.2))
install.packages(c("tidyverse"))
library(tidyverse)
shiny::runApp('C:/Users/layna/OneDrive/Attachments/QSIDE/Fall2025/CRJA-test/CRJA-app')
runApp('C:/Users/layna/OneDrive/Attachments/QSIDE/Fall2025/CRJA-test/CRJA-app')
runApp('C:/Users/layna/OneDrive/Attachments/QSIDE/Fall2025/CRJA-test/CRJA-app')
runApp('C:/Users/layna/OneDrive/Attachments/QSIDE/Fall2025/CRJA-test/CRJA-app')
runApp('C:/Users/layna/OneDrive/Attachments/QSIDE/Fall2025/CRJA-test/CRJA-app')
shiny::runApp('C:/Users/layna/OneDrive/Attachments/QSIDE/Fall2025/CRJA-test/CRJA-app')
rsconnect::setAccountInfo(name='laynajohnson', token='5CCA95B5528C8F52DE79BE8646B05933', secret='pTkLCvrzUr/yOi74CJNEHIxsoXl8QOFj/ZTaQxiF')
rsconnect::deployApp()
runApp('C:/Users/layna/OneDrive/Attachments/QSIDE/Fall2025/CRJA-test/CRJA-app')
test_data <- read_csv("randomly_selected_data.xlsx")
library(readr)
randomly_selected_data <- read_csv("C:/Users/layna/OneDrive/Attachments/QSIDE/Fall2025/CRJA-test/CRJA-app/randomly_selected_data.xlsx")
View(randomly_selected_data)
test_data <- read_csv("randomly_selected_data.xlsx")
setwd("C:/Users/layna/OneDrive/Attachments/QSIDE/Fall2025/CRJA-test/CRJA-app")
test_data <- read_csv("randomly_selected_data.xlsx")
counties <- c("Select Option",
"Alameda", "Alpine", "Amador", "Butte", "Calaveras", "Colusa", "Contra Costa", "Del Norte",
"El Dorado", "Fresno", "Glenn", "Humboldt", "Imperial", "Inyo", "Kern", "Kings", "Lake", "Lassen",
"Los Angeles", "Madera", "Marin", "Mariposa", "Mendocino", "Merced", "Modoc", "Mono", "Monterey",
"Napa", "Nevada", "Orange", "Placer", "Plumas", "Riverside", "Sacramento", "San Benito",
"San Bernardino", "San Diego", "San Francisco", "San Joaquin", "San Luis Obispo", "San Mateo",
"Santa Barbara", "Santa Clara", "Santa Cruz", "Shasta", "Sierra", "Siskiyou", "Solano", "Sonoma",
"Stanislaus", "Sutter", "Tehama", "Trinity", "Tulare", "Tuolumne", "Ventura", "Yolo", "Yuba"
)
race <- unique(test_data$Race)
natorigin <- unique(test_data$`Place of Birth`) # can recode all of the states to be United States
yearoffense <- 1970:2025
#
penalcode <- unique(test_data$Offense)
enhancements <- unique(test_data$Off_Enh1, test_data$Off_Enh2) %>%
na.omit()
enhancements <- unique(test_data$Off_Enh1, test_data$Off_Enh2) %>%
na.omit()
runApp()
runApp()
runApp()
runApp()
View(selections.csv)
runApp()
runApp()
